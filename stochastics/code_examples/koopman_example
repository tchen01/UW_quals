#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Aug 18 17:54:13 2018

@author: tyler
"""

import numpy as np
import scipy as sp
from scipy import integrate
import matplotlib.pyplot as plt

#%%
dt = 0.01
T = 50
t = np.arange(0,T+dt,dt)

x0 = np.array([0.1,5])
mu = 1.2

sol = sp.integrate.solve_ivp(lambda t,x: np.array([x[1], mu*(1-x[0]**2)*x[1]-x[0]]),[0,50],x0,t_eval=t)

x = sol.y

plt.plot(t,x[0])
plt.plot(t,x[1])

#%% TIME DELAY EMBEDD

H1 = np.reshape(np.array([x[:,j:4000+j] for j in range(6)]),(-1,4000))


u,s,vt = np.linalg.svd(H1,full_matrices=False)

plt.figure()
plt.scatter(np.arange(12),s/np.sum(s))

plt.figure()
for j in range(3):
    plt.plot(np.arange(12),u[:,j])

plt.figure()
for j in range(3):
    plt.plot(t[:4000],vt[j])


H2 = np.reshape(np.array([x[:,j:4000+j] for j in range(10)]),(-1,4000))
  
u,s,vt = np.linalg.svd(H2,full_matrices=False)

plt.figure()
plt.scatter(np.arange(20),s/np.sum(s))

plt.figure()
for j in range(3):
    plt.plot(np.arange(20),u[:,j])

plt.figure()
for j in range(3):
    plt.plot(t[:4000],vt[j])
    
H3 = np.reshape(np.array([x[:,j:4000+j] for j in range(900)]),(-1,4000))


u,s,vt = np.linalg.svd(H3,full_matrices=False)

plt.figure()
plt.scatter(np.arange(100),s[:100]/np.sum(s))

plt.figure()
for j in range(3):
    plt.scatter(np.arange(1800),u[:,j])

plt.figure()
for j in range(3):
    plt.plot(t[:4000],vt[j])